<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ryanieeee</title>
  
  <subtitle>小王的博客</subtitle>
  <link href="http://ryanieeee.cn/atom.xml" rel="self"/>
  
  <link href="http://ryanieeee.cn/"/>
  <updated>2023-08-02T08:41:58.858Z</updated>
  <id>http://ryanieeee.cn/</id>
  
  <author>
    <name>Ryanieeee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pytorch学习笔记</title>
    <link href="http://ryanieeee.cn/2023/08/01/pytorch%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://ryanieeee.cn/2023/08/01/pytorch%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-08-01T09:10:57.180Z</published>
    <updated>2023-08-02T08:41:58.858Z</updated>
    
    <content type="html"><![CDATA[<h1>浅谈Pytorch</h1><p>本文主要介绍和解释一些pytorch中常用的函数以及其使用方法</p><h2 id="1-Dataset类">1.Dataset类</h2><p>可以创建适应任何模型的数据集接口</p><h3 id="1">(1)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os <span class="comment">#python中关于系统的一个库，可以获取文件夹中所有文件的地址</span></span><br></pre></td></tr></table></figure><h3 id="2">(2)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyDataset</span> (<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="comment">#初始化类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span> (self,root_dir,label_dir):</span><br><span class="line">        self.root_dir = root_dir</span><br><span class="line">        self.label_dir = label_dir</span><br><span class="line">        self.path = os.path.join(self.root_dir,self.label_dir) <span class="comment">#形成样本路径</span></span><br><span class="line">        self.img_path = os.listdir(self.path)  <span class="comment">#获取样本列表</span></span><br><span class="line">    <span class="comment">#获取样本对</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span> (self,idx):</span><br><span class="line">        img_name = self.img_path[idx]  <span class="comment">#获取样本名称</span></span><br><span class="line">        img_item_path = os.path.join(self.root_dir,self.label_dir,img_name)</span><br><span class="line">        img = Image.<span class="built_in">open</span>(img_item_path)</span><br><span class="line">        label = self.label_dir</span><br><span class="line">        <span class="keyword">return</span> img, label</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span> (self):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_path)</span><br></pre></td></tr></table></figure><p>root_dir: 根目录<br>label_dir: 标签的地址<br>os.path.join：把括号里的路径结合在一起<br>os.listdir: 制成列表<br>idx: 样本位置</p><h2 id="2-TensorDataset">2.TensorDataset</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_dataset = TensorDataset(data,targets)</span><br><span class="line"><span class="comment">#其内部的数据格式：(data_i,targets_i)</span></span><br></pre></td></tr></table></figure><p>功能：用来对tensor数据打包，等同于zip函数的功能<br>用途：通常用于打包数据和标签，返回打包成元组的dataset<br>要求：送入该函数的两组tensor第一个维度大小必须相等</p><h2 id="3-ListDataset">3.ListDataset</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ListDataset(data)</span><br><span class="line">```  </span><br><span class="line">功能：将<span class="built_in">list</span>类型数据处理成Dataset类  </span><br><span class="line">用途：将<span class="built_in">list</span>转换为dataset类型，可以再送入TensorDataset等函数进一步处理  </span><br><span class="line">要求：<span class="built_in">list</span>中无嵌套  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 4.TransformDataset</span></span><br><span class="line">```python</span><br><span class="line">TransformDataset(dataset,transform)</span><br></pre></td></tr></table></figure><p>功能：对dataset进行transform操作<br>用途：自定义transform操作，对dataset中数据进一步操作<br>要求：第一个参数必须是dataset类数据</p><h2 id="5-TensorBoard">5.TensorBoard</h2><h3 id="SummaryWriter">SummaryWriter()</h3><p>常用函数1: add_scalar<br>其参数:<br>tag: 类似于图表的标题<br>scalar_value: y轴<br>global_step: x轴<br>dataformats: 图像数据格式，默认为“CHW”，也可以改为“HWC”或“HW”等</p><p>代码实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">writer = SummaryWriter(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;y=x&quot;</span>,i,i)  <span class="comment">#y=x图像</span></span><br><span class="line">writer.close()  <span class="comment">#写完记得关闭</span></span><br></pre></td></tr></table></figure><p>查看方式： 在终端窗口输入(虚拟环境中):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard--logdir = 文件绝对路径--port = 端口名</span><br></pre></td></tr></table></figure><p>注意：文件的路径不能含有中文，端口名可以不加</p><p>常用函数2. add_image</p><p>其参数:<br>tag: 类似于标题<br>img_tensor: torch.Tensor或np.array类型的图形数据<br>global_step: 记录这是这是第几个子图 （int）<br>dataformats；图像数据格式，默认为“CHW”，也可以改为“HWC”或“HW”等</p><p>代码实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">writer = SummaryWriter(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line">image_path = <span class="string">&quot;xxx&quot;</span></span><br><span class="line">image_PIL = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line">image_array = np.array(img_PIL)</span><br><span class="line">writer_add_image(<span class="string">&quot;test&quot;</span>,image_array,<span class="number">1</span>,dataformats=(<span class="string">&#x27;HW&#x27;</span>))</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;浅谈Pytorch&lt;/h1&gt;
&lt;p&gt;本文主要介绍和解释一些pytorch中常用的函数以及其使用方法&lt;/p&gt;
&lt;h2 id=&quot;1-Dataset类&quot;&gt;1.Dataset类&lt;/h2&gt;
&lt;p&gt;可以创建适应任何模型的数据集接口&lt;/p&gt;
&lt;h3 id=&quot;1&quot;&gt;(1)&lt;/h3&gt;
&lt;f</summary>
      
    
    
    
    <category term="机器学习" scheme="http://ryanieeee.cn/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
</feed>
